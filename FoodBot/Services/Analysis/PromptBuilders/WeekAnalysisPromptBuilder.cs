using System.Text.Json;
using FoodBot.Services.Reports;

namespace FoodBot.Services;

/// <summary>
/// Еженедельный отчёт для человека (печать/экспорт).
/// Модель выводит только человекочитаемый текст: таблицы и списки. Никаких JSON-блоков в ответе.
/// </summary>
public sealed class WeekAnalysisPromptBuilder<TData> : BaseAnalysisPromptBuilder<TData>
{
    protected override string BuildInstructions(ReportData<TData> report)
        => @$"Ты — внимательный клинический нутрициолог.
Анализируй ТОЛЬКО фактически съеденное с начала недели до текущего момента.
Привязывай анализ к локальному времени пользователя. Учитывай время каждого приёма.

ВАЖНО: итог — это чисто человекочитаемый отчёт для распечатки. 
— Никаких JSON, код-блоков, тегов <json>, YAML и пр.
— Используй короткие абзацы, подзаголовки, маркированные/нумерованные списки.
— Таблицы — компактные (Markdown-таблицы), не шире 80–90 символов.
— Тон: конкретно, без морализаторства, без выдумывания данных.

# Что уже съедено ({report.PeriodHuman})
Краткая выжимка (1–2 абзаца): частота приёмов, повторяющиеся продукты/блюда, поздние ужины/пропуски.

## Таблица приёмов
Выведи таблицу:
| Дата | Время | Блюдо | Ккал | Б | Ж | У | Комментарий |

## Итоги недели
Краткий блок с числами:
- Сумма: Ккал, Белки, Жиры, Углеводы
- Кол-во приёмов
- 3–5 основных вывода (короткие тезисы)

## Баланс по дням (итоги суток)
Таблица по дням (на основе dailyTotals):
| Дата | Ккал | Б | Ж | У |
После таблицы — отметь дни с явным перееданием/недобором и перекосами БЖУ (1–2 абзаца).

## Общая характеристика стиля питания
Маркированный список из 4–7 пунктов: тайминг, белок, качество жиров, сахара, клетчатка, вода (если видно), разнообразие. Каждому пункту — короткое пояснение «что улучшить».

## Индивидуальные нюансы
Учти возраст, рост, вес, пол, цели, ограничения и расход калорий (если переданы). Не предлагай запрещённое. 1 короткий абзац.

## Оценка по метрикам (0–100)
Список, каждую строку начинай с жирного балла:
- **Энергетический баланс:** NN/100 — пояснение в 1 предложении
- **Адекватность белка:** NN/100 — …
- **Качество жиров:** NN/100 — …
- **Углеводы и сахара:** NN/100 — …
- **Клетчатка/овощи:** NN/100 — …
- **Регулярность/тайминг:** NN/100 — …
- **Разнообразие рациона:** NN/100 — …

## Рекомендации на следующую неделю
Нумерованный список из 5–10 конкретных шагов. Где уместно — числа (граммы/порции/Ккал), простые ориентиры по времени приёмов.

## Простые замены (swap)
Таблица 3–6 строк:
| Было | Стало | Зачем (кратко) |

## Идеи блюд с учётом привычек/целей
Дай 6–10 вариантов (завтрак/обед/ужин/перекусы). Каждый в одной строке:
Название — ~Ккал; Б/Ж/У: x/y/z; почему подходит (кратко).
Избегай ингредиентов из ограничений; по возможности давай пары «быстро»/«если есть время».

В конце — короткий «итог в одном абзаце» (3–4 предложения), без новых данных.";


    protected override IEnumerable<object>? ExtraInputs(ReportData<TData> report)
    {
        if (report.Data is ReportPayload payload)
        {
            var table = payload.Grouping.ByDay.Select(d => new
            {
                date = d.Date,
                calories = d.Kcal,
                proteins = d.Proteins,
                fats = d.Fats,
                carbs = d.Carbs
            }); return new[] { new { type = "input_text",
                    text = JsonSerializer.Serialize(new { dailyTotals = table }) } };
        }
        return null;
    }
}
