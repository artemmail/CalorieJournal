// <auto-generated />
using System;
using FoodBot.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FoodBot.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20250919120000_pendingmeal_clarifynote")]
    partial class pendingmeal_clarifynote : Migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoodBot.Data.AnalysisPdfJob", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FilePath")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTimeOffset?>("FinishedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("ReportId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChatId", "CreatedAtUtc");

                    b.ToTable("AnalysisPdfJobs");
                });

            modelBuilder.Entity("FoodBot.Data.AnalysisReport1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("CaloriesChecksum")
                        .HasColumnType("int");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsProcessing")
                        .HasColumnType("bit");

                    b.Property<string>("Markdown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<DateOnly>("PeriodStartLocalDate")
                        .HasColumnType("date");

                    b.Property<DateTimeOffset?>("ProcessingStartedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("AnalysisReports2");
                });

            modelBuilder.Entity("FoodBot.Data.AppStartCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTimeOffset?>("ConsumedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("ExpiresAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ChatId", "ExpiresAtUtc");

                    b.ToTable("StartCodes");
                });

            modelBuilder.Entity("FoodBot.Data.MealEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CaloriesKcal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("CarbsG")
                        .HasColumnType("decimal(10,2)");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClarifyNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Confidence")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DishName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal?>("FatsG")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileMime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImageBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("IngredientsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ProductsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ProteinsG")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ReasoningPrompt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceType")
                        .HasColumnType("int");

                    b.Property<string>("Step1Json")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal?>("WeightG")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId", "CreatedAtUtc");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("FoodBot.Data.PendingClarify", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attempts")
                        .HasColumnType("int");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("NewTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId", "CreatedAtUtc");

                    b.ToTable("PendingClarifies");
                });

            modelBuilder.Entity("FoodBot.Data.PendingMeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Attempts")
                        .HasColumnType("int");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("DesiredMealTimeUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileMime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GenerateImage")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ImageBytes")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ClarifyNote")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId", "CreatedAtUtc");

                    b.ToTable("PendingMeals");
                });

            modelBuilder.Entity("FoodBot.Data.PeriodPdfJob", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreatedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("FilePath")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTimeOffset?>("FinishedAtUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<int>("Format")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChatId", "CreatedAtUtc");

                    b.ToTable("PeriodPdfJobs");
                });

            modelBuilder.Entity("FoodBot.Data.PersonalCard", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ActivityLevel")
                        .HasColumnType("int");

                    b.Property<int?>("BirthYear")
                        .HasColumnType("int");

                    b.Property<int?>("DailyCalories")
                        .HasColumnType("int");

                    b.Property<string>("DietGoals")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("HeightCm")
                        .HasColumnType("int");

                    b.Property<string>("MedicalRestrictions")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal?>("WeightKg")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ChatId");

                    b.ToTable("PersonalCards");
                });
#pragma warning restore 612, 618
        }
    }
}
